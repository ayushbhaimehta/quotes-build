{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.jsx","lib/api.js","pages/AllQuotes.jsx","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.jsx","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.jsx","components/layout/Mainnavigation.jsx","components/layout/Layout.jsx","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","HighlightedQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9ac2c0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__5-T1G\",\"loading\":\"QuoteForm_loading__l6K6O\",\"control\":\"QuoteForm_control__3vAji\",\"actions\":\"QuoteForm_actions__1GU9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1B3Ye\",\"logo\":\"MainNavigation_logo__2vdHq\",\"nav\":\"MainNavigation_nav__3ly0Y\",\"active\":\"MainNavigation_active__1orEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1PYxl\",\"loading\":\"NewCommentForm_loading__1QbSe\",\"control\":\"NewCommentForm_control__3tsN3\",\"actions\":\"NewCommentForm_actions__3mTVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2eep9\",\"sorting\":\"QuoteList_sorting__3r3r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2ea4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1VZh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__34Jf0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__4hW23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__37EYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3USHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2qeKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__17dpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3ga05\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;","import { useReducer, useCallback } from 'react';\r\n\r\nfunction httpReducer(state, action) {\r\n    if (action.type === 'SEND') {\r\n        return {\r\n            data: null,\r\n            error: null,\r\n            status: 'pending',\r\n        };\r\n    }\r\n\r\n    if (action.type === 'SUCCESS') {\r\n        return {\r\n            data: action.responseData,\r\n            error: null,\r\n            status: 'completed',\r\n        };\r\n    }\r\n\r\n    if (action.type === 'ERROR') {\r\n        return {\r\n            data: null,\r\n            error: action.errorMessage,\r\n            status: 'completed',\r\n        };\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n    const [httpState, dispatch] = useReducer(httpReducer, {\r\n        status: startWithPending ? 'pending' : null,\r\n        data: null,\r\n        error: null,\r\n    });\r\n\r\n    const sendRequest = useCallback(\r\n        async function (requestData) {\r\n            dispatch({ type: 'SEND' });\r\n            try {\r\n                const responseData = await requestFunction(requestData);\r\n                dispatch({ type: 'SUCCESS', responseData });\r\n            } catch (error) {\r\n                dispatch({\r\n                    type: 'ERROR',\r\n                    errorMessage: error.message || 'Something went wrong!',\r\n                });\r\n            }\r\n        },\r\n        [requestFunction]\r\n    );\r\n\r\n    return {\r\n        sendRequest,\r\n        ...httpState,\r\n    };\r\n}\r\n\r\nexport default useHttp;","const FIREBASE_DOMAIN = 'https://task-handler-d2bc4-default-rtdb.firebaseio.com';\r\n\r\nexport async function getAllQuotes() {\r\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Could not fetch quotes.');\r\n    }\r\n\r\n    const transformedQuotes = [];\r\n\r\n    for (const key in data) {\r\n        const quoteObj = {\r\n            id: key,\r\n            ...data[key],\r\n        };\r\n\r\n        transformedQuotes.push(quoteObj);\r\n    }\r\n\r\n    return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Could not fetch quote.');\r\n    }\r\n\r\n    const loadedQuote = {\r\n        id: quoteId,\r\n        ...data,\r\n    };\r\n\r\n    return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(quoteData),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Could not create quote.');\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n    const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestData.commentData),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Could not add comment.');\r\n    }\r\n\r\n    return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n    const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Could not get comments.');\r\n    }\r\n\r\n    const transformedComments = [];\r\n\r\n    for (const key in data) {\r\n        const commentObj = {\r\n            id: key,\r\n            ...data[key],\r\n        };\r\n\r\n        transformedComments.push(commentObj);\r\n    }\r\n\r\n    return transformedComments;\r\n}","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(\r\n        getAllQuotes,\r\n        true\r\n    );\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>;\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />;\r\n    }\r\n\r\n    return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n    };\r\n\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    const { quoteId } = params;\r\n\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n        getSingleQuote,\r\n        true\r\n    );\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered'>{error}</p>;\r\n    }\r\n\r\n    if (!loadedQuote.text) {\r\n        return <p>No quote found!</p>;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            <Route path={match.path} exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={`${match.url}/comments`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to='/quotes' activeClassName={classes.active}>\r\n                            All Quotes\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/new-quote' activeClassName={classes.active}>\r\n                            Add a Quote\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;","import { Fragment } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './Mainnavigation';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","import { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\"\n\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}